{
    "openapi": "3.0.0",
    "info": {
        "title": "Booking Management System API",
        "version": "1.0.0"
    },
    "paths": {
        "/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "List all bookings",
                "operationId": "listAllBookings",
                "responses": {
                    "200": {
                        "description": "A list of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookings/{type}/{id}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Show a specific booking",
                "operationId": "showBooking",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the specified booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            }
        },
        "/bookings/{type}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "List all bookings by type",
                "operationId": "showBookingsByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the booking (car, flight, hotel)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of bookings of the specified type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bookings not found"
                    }
                }
            }
        },
        "/availables": {
            "get": {
                "tags": [
                    "Availables"
                ],
                "summary": "List all available items",
                "operationId": "listAllAvailables",
                "responses": {
                    "200": {
                        "description": "A list of available items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AvailableItem"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/availables/{type}": {
            "get": {
                "tags": [
                    "Availables"
                ],
                "summary": "List all available items by type",
                "operationId": "listAvailableItemsByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the available item (car, flight, hotel)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of available items of the specified type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AvailableItem"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Available items not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Availables"
                ],
                "summary": "Create a new available item",
                "operationId": "storeAvailable",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the available item",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailableItem"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableItem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/availables/{type}/{id}": {
            "get": {
                "tags": [
                    "Availables"
                ],
                "summary": "Show a specific available item",
                "operationId": "showAvailable",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the available item",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the available item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the specified available item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Available item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Availables"
                ],
                "summary": "Update an available item",
                "operationId": "updateAvailable",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the available item",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the available item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailableItem"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableItem"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Availables"
                ],
                "summary": "Delete an available item",
                "operationId": "deleteAvailable",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the available item",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the available item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Item Deleted Successfully"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List all users",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "A list of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/bookings/latest": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get latest bookings",
                "operationId": "getLatestBookings",
                "responses": {
                    "200": {
                        "description": "Latest bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Booking"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user and get a JWT token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Passw0rd!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phoneNumber",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Passw0rd!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Passw0rd!"
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "Name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "Email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@example.com"
                                                },
                                                "PhoneNumber": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "Role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phoneNumber": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the user (invalidate the current token)",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh JWT token",
                "operationId": "833684aa6f123680767976945e7c783c",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token is expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/booking/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get all car bookings by the authenticated user",
                "operationId": "50ccaaa2fd471368ab11823fe8c08124",
                "responses": {
                    "200": {
                        "description": "List of all car bookings by the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingCar"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No car bookings found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Create a new car booking",
                "operationId": "bceea31cd3dd33f65c80d4aaeca2eb4d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingCar"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingCar"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Booking creation failed"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/booking/cars/{id}": {
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update an existing car booking",
                "operationId": "848e30c21d7b843170a5b533d92784f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingCar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car booking updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingCar"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not available or booking not found"
                    },
                    "403": {
                        "description": "No booking found for this user"
                    },
                    "500": {
                        "description": "Booking update failed"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Cancel a car booking",
                "operationId": "97cb12a0df4b1aa410d1cef57294b8d8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car booking canceled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingCar"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "403": {
                        "description": "No booking found for this user"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/booking/flights": {
            "get": {
                "tags": [
                    "Flights"
                ],
                "summary": "Get all flights booked by the authenticated user",
                "operationId": "febb504558ce976313aed443b5120364",
                "responses": {
                    "200": {
                        "description": "List of all flights booked by the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingFlight"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Flights"
                ],
                "summary": "Add a new flight booking for the authenticated user",
                "operationId": "f7282a9b14066f4f7666cdf008cc71d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingFlight"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Flight booking added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingFlight"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Flight Not Found"
                    },
                    "409": {
                        "description": "You have already booked this flight"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Booking failed"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/booking/flights/{id}": {
            "put": {
                "tags": [
                    "Flights"
                ],
                "summary": "Update a flight booking for the authenticated user",
                "operationId": "80c247ac2835c4b38ee0cfcc3a3da1d2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingFlight"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Flight booking updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingFlight"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No booking"
                    },
                    "404": {
                        "description": "Flight Not Found"
                    },
                    "500": {
                        "description": "Booking update failed"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Flights"
                ],
                "summary": "Cancel a flight booking for the authenticated user",
                "operationId": "5e84fdf69c8f0de1b285586cab43a16b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flight booking canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingFlight"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No booking"
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/booking/hotels": {
            "get": {
                "tags": [
                    "Hotel"
                ],
                "summary": "Get all hotel bookings by the authenticated user",
                "operationId": "b7720d0995e6cd068911694eadb433e5",
                "responses": {
                    "200": {
                        "description": "List of all hotel bookings by the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingHotel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No bookings found for the user"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Hotel"
                ],
                "summary": "Add a new hotel booking for the authenticated user",
                "operationId": "84af4f4887ee50a531c469d55ff6da87",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingHotel"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Hotel booking successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingHotel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hotel not found or not available for the selected dates"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Booking failed due to a server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/booking/hotels/{id}": {
            "put": {
                "tags": [
                    "Hotel"
                ],
                "summary": "Update a hotel booking for the authenticated user",
                "operationId": "3ebc044c709c71cf2584961b610991f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingHotel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hotel booking successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingHotel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hotel not available for the selected dates or booking not found"
                    },
                    "403": {
                        "description": "No booking found for the provided ID and authenticated user"
                    },
                    "500": {
                        "description": "Booking update failed due to a server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Hotel"
                ],
                "summary": "Cancel a hotel booking for the authenticated user",
                "operationId": "432f572ff87a1addbd7a0aadc54a1cef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotel booking canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingHotel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "403": {
                        "description": "No booking"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/get/cars": {
            "get": {
                "tags": [
                    "Searching Car"
                ],
                "summary": "Get a list of all car bookings",
                "operationId": "b5de341f61cd32ce217b8f155c7e70aa",
                "responses": {
                    "200": {
                        "description": "A list of car bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchingCar"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No bookings found"
                    }
                }
            }
        },
        "/api/search/cars": {
            "get": {
                "tags": [
                    "Searching Car"
                ],
                "summary": "Search for car bookings",
                "operationId": "c3ad724addb7798f24fa08e26eeee768",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchingCar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchingCar"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search input"
                    }
                }
            }
        },
        "/get/flights": {
            "get": {
                "tags": [
                    "Searching Flight"
                ],
                "summary": "Get all flights",
                "description": "Returns list of all booked flights",
                "operationId": "cad709716eb35380195ebed6fb84021a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchingFlight"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/search/flights": {
            "get": {
                "tags": [
                    "Searching Flight"
                ],
                "summary": "Search flights",
                "description": "Search flights based on criteria",
                "operationId": "416d467550720d4d72f1b805effdfeb3",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search criteria",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/get/hotels": {
            "get": {
                "tags": [
                    "Searching Hotel"
                ],
                "summary": "Get all hotels",
                "description": "Returns a list of all booked hotels",
                "operationId": "0cee052d244bedcfd0770793f7352b40",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchingHotel"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/search/hotels": {
            "get": {
                "tags": [
                    "Searching Hotel"
                ],
                "summary": "Search hotels",
                "description": "Search hotels based on criteria",
                "operationId": "bb9dc3beab9bdd1395c79be35c4d4e80",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search criteria",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/{bookingType}/{bookingId}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews for a specific booking",
                "operationId": "5a5380ef39ac5103295b1a17d21a94cf",
                "parameters": [
                    {
                        "name": "bookingType",
                        "in": "path",
                        "description": "Type of the booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bookingId",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "BookingID": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "BookingType": {
                                                "type": "string",
                                                "example": "hotel"
                                            },
                                            "Rating": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "ReviewText": {
                                                "type": "string",
                                                "example": "Great service!"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Store a new review",
                "operationId": "c1e42e3825f84e290ea06846a75570d4",
                "parameters": [
                    {
                        "name": "bookingType",
                        "in": "path",
                        "description": "Type of the booking (e.g., flight, hotel, car_rental)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bookingId",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "review_text": {
                                        "type": "string",
                                        "example": "Great service!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review added successfully"
                                        },
                                        "review": {
                                            "properties": {
                                                "BookingID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "BookingType": {
                                                    "type": "string",
                                                    "example": "hotel"
                                                },
                                                "Rating": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "ReviewText": {
                                                    "type": "string",
                                                    "example": "Great service!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/{bookingType}/{bookingId}/reviews/{reviewId}": {
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update an existing review",
                "operationId": "02f2b9da6ef875c0a99342b906da836b",
                "parameters": [
                    {
                        "name": "bookingType",
                        "in": "path",
                        "description": "Type of the booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bookingId",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "review_text": {
                                        "type": "string",
                                        "example": "Updated review text"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully"
                                        },
                                        "review": {
                                            "properties": {
                                                "BookingID": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "BookingType": {
                                                    "type": "string",
                                                    "example": "hotel"
                                                },
                                                "Rating": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "ReviewText": {
                                                    "type": "string",
                                                    "example": "Updated review text"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "operationId": "423ec69bcbd5f2051a6933194ad88095",
                "parameters": [
                    {
                        "name": "bookingType",
                        "in": "path",
                        "description": "Type of the booking",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bookingId",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the current authenticated user",
                "operationId": "fcc1681bb04213cfcdc39a0a0a4caabf",
                "responses": {
                    "200": {
                        "description": "Returns the current user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john.doe@example.com"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user information",
                "operationId": "fd4f39f7820d3f3cbc259c5b30fed830",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User information updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user password",
                "operationId": "57ddbc5bebe0cd30c268a0d8a4640660",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "CurrentPassw0rd"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassw0rd"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassw0rd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User schema",
                "properties": {
                    "id": {
                        "description": "The user ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "The user's email address",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone_number": {
                        "description": "The user's phone number",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "profile_picture": {
                        "description": "URL of the user's profile picture",
                        "type": "string",
                        "example": "http://example.com/profile.jpg",
                        "nullable": true
                    },
                    "role": {
                        "description": "The user's role",
                        "type": "string",
                        "example": "admin"
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "description": "Booking schema",
                "properties": {
                    "id": {
                        "description": "The booking ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user who made the booking",
                        "type": "integer",
                        "example": 1
                    },
                    "service_type": {
                        "description": "Type of the service booked (e.g., car, flight, hotel)",
                        "type": "string",
                        "example": "car"
                    },
                    "booking_date": {
                        "description": "Date of the booking",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-10"
                    },
                    "start_date": {
                        "description": "Start date of the service",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-15"
                    },
                    "end_date": {
                        "description": "End date of the service",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-20"
                    },
                    "total_price": {
                        "description": "Total price for the booking",
                        "type": "number",
                        "format": "float",
                        "example": 500
                    }
                },
                "type": "object"
            },
            "AvailableItem": {
                "title": "Available Item",
                "description": "Schema for an available item",
                "properties": {
                    "id": {
                        "description": "The ID of the item",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the service item",
                        "type": "string",
                        "example": "Service Name"
                    },
                    "description": {
                        "description": "Description of the service item",
                        "type": "string",
                        "example": "Detailed description of the item"
                    },
                    "price": {
                        "description": "Price of the item",
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "type": {
                        "description": "Type of the service item (e.g., car, flight, hotel)",
                        "type": "string",
                        "example": "car"
                    },
                    "available_from": {
                        "description": "Date and time from when the item is available",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-01T00:00:00Z"
                    },
                    "available_to": {
                        "description": "Date and time until when the item is available",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-30T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "BookingCar": {
                "title": "BookingCar",
                "required": [
                    "UserID",
                    "CarRentalID",
                    "Location",
                    "TotalPrice",
                    "StartDate",
                    "EndDate"
                ],
                "properties": {
                    "UserID": {
                        "description": "ID of the user who made the booking",
                        "type": "integer"
                    },
                    "CarRentalID": {
                        "description": "ID of the car rental being booked",
                        "type": "integer"
                    },
                    "CarModel": {
                        "description": "Model of the car being booked",
                        "type": "string"
                    },
                    "Location": {
                        "description": "Location where the car will be picked up",
                        "type": "string"
                    },
                    "TotalPrice": {
                        "description": "Total price for the booking",
                        "type": "number",
                        "format": "float"
                    },
                    "StartDate": {
                        "description": "Start date of the booking",
                        "type": "string",
                        "format": "date"
                    },
                    "EndDate": {
                        "description": "End date of the booking",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "BookingFlight": {
                "title": "BookingFlight",
                "required": [
                    "UserID",
                    "FlightID",
                    "Numberofpassengers",
                    "TotalPrice",
                    "ArrivalTime"
                ],
                "properties": {
                    "UserID": {
                        "type": "integer"
                    },
                    "FlightID": {
                        "type": "integer"
                    },
                    "Numberofpassengers": {
                        "type": "integer"
                    },
                    "TotalPrice": {
                        "type": "number",
                        "format": "float"
                    },
                    "ArrivalTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BookingHotel": {
                "title": "BookingHotel",
                "required": [
                    "UserID",
                    "HotelID",
                    "TotalPrice",
                    "StartDate",
                    "EndDate"
                ],
                "properties": {
                    "UserID": {
                        "description": "ID of the user who made the booking",
                        "type": "integer"
                    },
                    "HotelID": {
                        "description": "ID of the booked hotel",
                        "type": "integer"
                    },
                    "TotalPrice": {
                        "description": "Total price of the booking",
                        "type": "number",
                        "format": "float"
                    },
                    "StartDate": {
                        "description": "Start date of the booking",
                        "type": "string",
                        "format": "date"
                    },
                    "EndDate": {
                        "description": "End date of the booking",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "SearchingCar": {
                "title": "SearchingCar",
                "required": [
                    "UserID",
                    "CarModel",
                    "SeatNumber",
                    "Location",
                    "PricePerDay",
                    "Availability",
                    "StartDate",
                    "EndDate"
                ],
                "properties": {
                    "CarRentalID": {
                        "type": "integer",
                        "example": 1
                    },
                    "UserID": {
                        "type": "integer",
                        "example": 1
                    },
                    "CarModel": {
                        "type": "string",
                        "example": "Toyota Corolla"
                    },
                    "SeatNumber": {
                        "type": "integer",
                        "example": 5
                    },
                    "Location": {
                        "type": "string",
                        "example": "New York"
                    },
                    "PricePerDay": {
                        "type": "number",
                        "format": "float",
                        "example": "49.99"
                    },
                    "Availability": {
                        "type": "boolean",
                        "example": true
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-20"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-25"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-19 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-19 10:00:00"
                    }
                },
                "type": "object"
            },
            "SearchingFlight": {
                "title": "SearchingFlight",
                "required": [
                    "id",
                    "flight_number"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "flight_number": {
                        "type": "string"
                    },
                    "arrival": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "SearchingHotel": {
                "title": "SearchingHotel",
                "required": [
                    "id",
                    "hotel_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "hotel_name": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints for Authentication"
        },
        {
            "name": "Reviews",
            "description": "API Endpoints for Reviews"
        },
        {
            "name": "User",
            "description": "API Endpoints for managing user information"
        },
        {
            "name": "Bookings",
            "description": "Bookings"
        },
        {
            "name": "Availables",
            "description": "Availables"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Cars",
            "description": "Cars"
        },
        {
            "name": "Flights",
            "description": "Flights"
        },
        {
            "name": "Hotel",
            "description": "Hotel"
        },
        {
            "name": "Searching Car",
            "description": "Searching Car"
        },
        {
            "name": "Searching Flight",
            "description": "Searching Flight"
        },
        {
            "name": "Searching Hotel",
            "description": "Searching Hotel"
        }
    ]
}